// Generated by view binder compiler. Do not edit!
package com.example.iqos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.iqos.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemEcAppointmentsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout llMainAppointment;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvId;

  @NonNull
  public final TextView tvLocation;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvStartAppointment;

  @NonNull
  public final TextView tvTime;

  private ItemEcAppointmentsBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout llMainAppointment, @NonNull TextView tvDate, @NonNull TextView tvId,
      @NonNull TextView tvLocation, @NonNull TextView tvName, @NonNull TextView tvStartAppointment,
      @NonNull TextView tvTime) {
    this.rootView = rootView;
    this.llMainAppointment = llMainAppointment;
    this.tvDate = tvDate;
    this.tvId = tvId;
    this.tvLocation = tvLocation;
    this.tvName = tvName;
    this.tvStartAppointment = tvStartAppointment;
    this.tvTime = tvTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemEcAppointmentsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemEcAppointmentsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_ec_appointments, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemEcAppointmentsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout llMainAppointment = (LinearLayout) rootView;

      id = R.id.tvDate;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tvId;
      TextView tvId = ViewBindings.findChildViewById(rootView, id);
      if (tvId == null) {
        break missingId;
      }

      id = R.id.tvLocation;
      TextView tvLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvLocation == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tvStartAppointment;
      TextView tvStartAppointment = ViewBindings.findChildViewById(rootView, id);
      if (tvStartAppointment == null) {
        break missingId;
      }

      id = R.id.tvTime;
      TextView tvTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTime == null) {
        break missingId;
      }

      return new ItemEcAppointmentsBinding((LinearLayout) rootView, llMainAppointment, tvDate, tvId,
          tvLocation, tvName, tvStartAppointment, tvTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
