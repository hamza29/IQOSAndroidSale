// Generated by view binder compiler. Do not edit!
package com.example.iqos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.iqos.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEcomMeetingBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CheckBox cbCustomer;

  @NonNull
  public final CheckBox cbDeviceLinking;

  @NonNull
  public final CheckBox cbEcoomerRegisteration;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final ImageView ivLogo;

  @NonNull
  public final LinearLayout llCoach;

  @NonNull
  public final LinearLayout llConsumerKit;

  @NonNull
  public final LinearLayout llTasks;

  @NonNull
  public final RelativeLayout rlHeader;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final TextView tvDone;

  @NonNull
  public final TextView tvLeadName;

  @NonNull
  public final TextView tvMeeting;

  private ActivityEcomMeetingBinding(@NonNull RelativeLayout rootView, @NonNull CheckBox cbCustomer,
      @NonNull CheckBox cbDeviceLinking, @NonNull CheckBox cbEcoomerRegisteration,
      @NonNull ImageView ivBack, @NonNull ImageView ivLogo, @NonNull LinearLayout llCoach,
      @NonNull LinearLayout llConsumerKit, @NonNull LinearLayout llTasks,
      @NonNull RelativeLayout rlHeader, @NonNull ScrollView scrollView, @NonNull TextView tvDone,
      @NonNull TextView tvLeadName, @NonNull TextView tvMeeting) {
    this.rootView = rootView;
    this.cbCustomer = cbCustomer;
    this.cbDeviceLinking = cbDeviceLinking;
    this.cbEcoomerRegisteration = cbEcoomerRegisteration;
    this.ivBack = ivBack;
    this.ivLogo = ivLogo;
    this.llCoach = llCoach;
    this.llConsumerKit = llConsumerKit;
    this.llTasks = llTasks;
    this.rlHeader = rlHeader;
    this.scrollView = scrollView;
    this.tvDone = tvDone;
    this.tvLeadName = tvLeadName;
    this.tvMeeting = tvMeeting;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEcomMeetingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEcomMeetingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_ecom_meeting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEcomMeetingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cbCustomer;
      CheckBox cbCustomer = ViewBindings.findChildViewById(rootView, id);
      if (cbCustomer == null) {
        break missingId;
      }

      id = R.id.cbDeviceLinking;
      CheckBox cbDeviceLinking = ViewBindings.findChildViewById(rootView, id);
      if (cbDeviceLinking == null) {
        break missingId;
      }

      id = R.id.cbEcoomerRegisteration;
      CheckBox cbEcoomerRegisteration = ViewBindings.findChildViewById(rootView, id);
      if (cbEcoomerRegisteration == null) {
        break missingId;
      }

      id = R.id.ivBack;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.ivLogo;
      ImageView ivLogo = ViewBindings.findChildViewById(rootView, id);
      if (ivLogo == null) {
        break missingId;
      }

      id = R.id.llCoach;
      LinearLayout llCoach = ViewBindings.findChildViewById(rootView, id);
      if (llCoach == null) {
        break missingId;
      }

      id = R.id.llConsumerKit;
      LinearLayout llConsumerKit = ViewBindings.findChildViewById(rootView, id);
      if (llConsumerKit == null) {
        break missingId;
      }

      id = R.id.llTasks;
      LinearLayout llTasks = ViewBindings.findChildViewById(rootView, id);
      if (llTasks == null) {
        break missingId;
      }

      id = R.id.rlHeader;
      RelativeLayout rlHeader = ViewBindings.findChildViewById(rootView, id);
      if (rlHeader == null) {
        break missingId;
      }

      id = R.id.scrollView;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.tvDone;
      TextView tvDone = ViewBindings.findChildViewById(rootView, id);
      if (tvDone == null) {
        break missingId;
      }

      id = R.id.tvLeadName;
      TextView tvLeadName = ViewBindings.findChildViewById(rootView, id);
      if (tvLeadName == null) {
        break missingId;
      }

      id = R.id.tvMeeting;
      TextView tvMeeting = ViewBindings.findChildViewById(rootView, id);
      if (tvMeeting == null) {
        break missingId;
      }

      return new ActivityEcomMeetingBinding((RelativeLayout) rootView, cbCustomer, cbDeviceLinking,
          cbEcoomerRegisteration, ivBack, ivLogo, llCoach, llConsumerKit, llTasks, rlHeader,
          scrollView, tvDone, tvLeadName, tvMeeting);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
