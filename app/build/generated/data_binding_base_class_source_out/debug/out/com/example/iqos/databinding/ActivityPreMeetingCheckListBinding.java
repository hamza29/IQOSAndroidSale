// Generated by view binder compiler. Do not edit!
package com.example.iqos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.iqos.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPreMeetingCheckListBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CheckBox cbCoach;

  @NonNull
  public final CheckBox cbConsumer;

  @NonNull
  public final CheckBox cbSpace;

  @NonNull
  public final CheckBox cbTools;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final ImageView ivLogo;

  @NonNull
  public final LinearLayout llCoach;

  @NonNull
  public final LinearLayout llConsumerKit;

  @NonNull
  public final LinearLayout llSpace;

  @NonNull
  public final LinearLayout llTasks;

  @NonNull
  public final LinearLayout llTools;

  @NonNull
  public final RelativeLayout rlHeader;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final TextView tvCoachText;

  @NonNull
  public final TextView tvConsumerText;

  @NonNull
  public final TextView tvDone;

  @NonNull
  public final TextView tvLeadName;

  @NonNull
  public final TextView tvMeeting;

  @NonNull
  public final TextView tvSpaceText;

  @NonNull
  public final TextView tvtoolsText;

  private ActivityPreMeetingCheckListBinding(@NonNull RelativeLayout rootView,
      @NonNull CheckBox cbCoach, @NonNull CheckBox cbConsumer, @NonNull CheckBox cbSpace,
      @NonNull CheckBox cbTools, @NonNull ImageView ivBack, @NonNull ImageView ivLogo,
      @NonNull LinearLayout llCoach, @NonNull LinearLayout llConsumerKit,
      @NonNull LinearLayout llSpace, @NonNull LinearLayout llTasks, @NonNull LinearLayout llTools,
      @NonNull RelativeLayout rlHeader, @NonNull ScrollView scrollView,
      @NonNull TextView tvCoachText, @NonNull TextView tvConsumerText, @NonNull TextView tvDone,
      @NonNull TextView tvLeadName, @NonNull TextView tvMeeting, @NonNull TextView tvSpaceText,
      @NonNull TextView tvtoolsText) {
    this.rootView = rootView;
    this.cbCoach = cbCoach;
    this.cbConsumer = cbConsumer;
    this.cbSpace = cbSpace;
    this.cbTools = cbTools;
    this.ivBack = ivBack;
    this.ivLogo = ivLogo;
    this.llCoach = llCoach;
    this.llConsumerKit = llConsumerKit;
    this.llSpace = llSpace;
    this.llTasks = llTasks;
    this.llTools = llTools;
    this.rlHeader = rlHeader;
    this.scrollView = scrollView;
    this.tvCoachText = tvCoachText;
    this.tvConsumerText = tvConsumerText;
    this.tvDone = tvDone;
    this.tvLeadName = tvLeadName;
    this.tvMeeting = tvMeeting;
    this.tvSpaceText = tvSpaceText;
    this.tvtoolsText = tvtoolsText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPreMeetingCheckListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPreMeetingCheckListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_pre_meeting_check_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPreMeetingCheckListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cbCoach;
      CheckBox cbCoach = ViewBindings.findChildViewById(rootView, id);
      if (cbCoach == null) {
        break missingId;
      }

      id = R.id.cbConsumer;
      CheckBox cbConsumer = ViewBindings.findChildViewById(rootView, id);
      if (cbConsumer == null) {
        break missingId;
      }

      id = R.id.cbSpace;
      CheckBox cbSpace = ViewBindings.findChildViewById(rootView, id);
      if (cbSpace == null) {
        break missingId;
      }

      id = R.id.cbTools;
      CheckBox cbTools = ViewBindings.findChildViewById(rootView, id);
      if (cbTools == null) {
        break missingId;
      }

      id = R.id.ivBack;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.ivLogo;
      ImageView ivLogo = ViewBindings.findChildViewById(rootView, id);
      if (ivLogo == null) {
        break missingId;
      }

      id = R.id.llCoach;
      LinearLayout llCoach = ViewBindings.findChildViewById(rootView, id);
      if (llCoach == null) {
        break missingId;
      }

      id = R.id.llConsumerKit;
      LinearLayout llConsumerKit = ViewBindings.findChildViewById(rootView, id);
      if (llConsumerKit == null) {
        break missingId;
      }

      id = R.id.llSpace;
      LinearLayout llSpace = ViewBindings.findChildViewById(rootView, id);
      if (llSpace == null) {
        break missingId;
      }

      id = R.id.llTasks;
      LinearLayout llTasks = ViewBindings.findChildViewById(rootView, id);
      if (llTasks == null) {
        break missingId;
      }

      id = R.id.llTools;
      LinearLayout llTools = ViewBindings.findChildViewById(rootView, id);
      if (llTools == null) {
        break missingId;
      }

      id = R.id.rlHeader;
      RelativeLayout rlHeader = ViewBindings.findChildViewById(rootView, id);
      if (rlHeader == null) {
        break missingId;
      }

      id = R.id.scrollView;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.tvCoachText;
      TextView tvCoachText = ViewBindings.findChildViewById(rootView, id);
      if (tvCoachText == null) {
        break missingId;
      }

      id = R.id.tvConsumerText;
      TextView tvConsumerText = ViewBindings.findChildViewById(rootView, id);
      if (tvConsumerText == null) {
        break missingId;
      }

      id = R.id.tvDone;
      TextView tvDone = ViewBindings.findChildViewById(rootView, id);
      if (tvDone == null) {
        break missingId;
      }

      id = R.id.tvLeadName;
      TextView tvLeadName = ViewBindings.findChildViewById(rootView, id);
      if (tvLeadName == null) {
        break missingId;
      }

      id = R.id.tvMeeting;
      TextView tvMeeting = ViewBindings.findChildViewById(rootView, id);
      if (tvMeeting == null) {
        break missingId;
      }

      id = R.id.tvSpaceText;
      TextView tvSpaceText = ViewBindings.findChildViewById(rootView, id);
      if (tvSpaceText == null) {
        break missingId;
      }

      id = R.id.tvtoolsText;
      TextView tvtoolsText = ViewBindings.findChildViewById(rootView, id);
      if (tvtoolsText == null) {
        break missingId;
      }

      return new ActivityPreMeetingCheckListBinding((RelativeLayout) rootView, cbCoach, cbConsumer,
          cbSpace, cbTools, ivBack, ivLogo, llCoach, llConsumerKit, llSpace, llTasks, llTools,
          rlHeader, scrollView, tvCoachText, tvConsumerText, tvDone, tvLeadName, tvMeeting,
          tvSpaceText, tvtoolsText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
