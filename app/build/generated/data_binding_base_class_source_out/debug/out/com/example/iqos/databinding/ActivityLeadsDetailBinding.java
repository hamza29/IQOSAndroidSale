// Generated by view binder compiler. Do not edit!
package com.example.iqos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.iqos.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLeadsDetailBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView btnEmail;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final ImageView ivLogo;

  @NonNull
  public final LinearLayout llCall2Status;

  @NonNull
  public final LinearLayout llCall3Status;

  @NonNull
  public final LinearLayout llCall4Status;

  @NonNull
  public final LinearLayout llCallStatus;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final RelativeLayout rlHeader;

  @NonNull
  public final Spinner spinnerCall2Status;

  @NonNull
  public final Spinner spinnerCall3Status;

  @NonNull
  public final Spinner spinnerCall4Status;

  @NonNull
  public final Spinner spinnerCallStatus;

  @NonNull
  public final Spinner spinnerLeadStatus;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  @NonNull
  public final EditText tvAge;

  @NonNull
  public final TextView tvBookAppoint;

  @NonNull
  public final EditText tvCOmpany;

  @NonNull
  public final TextView tvCall;

  @NonNull
  public final EditText tvDesignation;

  @NonNull
  public final TextView tvEdit;

  @NonNull
  public final EditText tvEmail;

  @NonNull
  public final TextView tvLastAction;

  @NonNull
  public final TextView tvMessage;

  @NonNull
  public final TextView tvNextAction;

  @NonNull
  public final EditText tvPhoneNumber;

  @NonNull
  public final EditText tvfirstName;

  @NonNull
  public final EditText tvlastName;

  private ActivityLeadsDetailBinding(@NonNull RelativeLayout rootView, @NonNull TextView btnEmail,
      @NonNull ImageView ivBack, @NonNull ImageView ivLogo, @NonNull LinearLayout llCall2Status,
      @NonNull LinearLayout llCall3Status, @NonNull LinearLayout llCall4Status,
      @NonNull LinearLayout llCallStatus, @NonNull ProgressBar progress,
      @NonNull RelativeLayout rlHeader, @NonNull Spinner spinnerCall2Status,
      @NonNull Spinner spinnerCall3Status, @NonNull Spinner spinnerCall4Status,
      @NonNull Spinner spinnerCallStatus, @NonNull Spinner spinnerLeadStatus,
      @NonNull SwipeRefreshLayout swipeRefresh, @NonNull EditText tvAge,
      @NonNull TextView tvBookAppoint, @NonNull EditText tvCOmpany, @NonNull TextView tvCall,
      @NonNull EditText tvDesignation, @NonNull TextView tvEdit, @NonNull EditText tvEmail,
      @NonNull TextView tvLastAction, @NonNull TextView tvMessage, @NonNull TextView tvNextAction,
      @NonNull EditText tvPhoneNumber, @NonNull EditText tvfirstName,
      @NonNull EditText tvlastName) {
    this.rootView = rootView;
    this.btnEmail = btnEmail;
    this.ivBack = ivBack;
    this.ivLogo = ivLogo;
    this.llCall2Status = llCall2Status;
    this.llCall3Status = llCall3Status;
    this.llCall4Status = llCall4Status;
    this.llCallStatus = llCallStatus;
    this.progress = progress;
    this.rlHeader = rlHeader;
    this.spinnerCall2Status = spinnerCall2Status;
    this.spinnerCall3Status = spinnerCall3Status;
    this.spinnerCall4Status = spinnerCall4Status;
    this.spinnerCallStatus = spinnerCallStatus;
    this.spinnerLeadStatus = spinnerLeadStatus;
    this.swipeRefresh = swipeRefresh;
    this.tvAge = tvAge;
    this.tvBookAppoint = tvBookAppoint;
    this.tvCOmpany = tvCOmpany;
    this.tvCall = tvCall;
    this.tvDesignation = tvDesignation;
    this.tvEdit = tvEdit;
    this.tvEmail = tvEmail;
    this.tvLastAction = tvLastAction;
    this.tvMessage = tvMessage;
    this.tvNextAction = tvNextAction;
    this.tvPhoneNumber = tvPhoneNumber;
    this.tvfirstName = tvfirstName;
    this.tvlastName = tvlastName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLeadsDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLeadsDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_leads_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLeadsDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnEmail;
      TextView btnEmail = ViewBindings.findChildViewById(rootView, id);
      if (btnEmail == null) {
        break missingId;
      }

      id = R.id.ivBack;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.ivLogo;
      ImageView ivLogo = ViewBindings.findChildViewById(rootView, id);
      if (ivLogo == null) {
        break missingId;
      }

      id = R.id.llCall2Status;
      LinearLayout llCall2Status = ViewBindings.findChildViewById(rootView, id);
      if (llCall2Status == null) {
        break missingId;
      }

      id = R.id.llCall3Status;
      LinearLayout llCall3Status = ViewBindings.findChildViewById(rootView, id);
      if (llCall3Status == null) {
        break missingId;
      }

      id = R.id.llCall4Status;
      LinearLayout llCall4Status = ViewBindings.findChildViewById(rootView, id);
      if (llCall4Status == null) {
        break missingId;
      }

      id = R.id.llCallStatus;
      LinearLayout llCallStatus = ViewBindings.findChildViewById(rootView, id);
      if (llCallStatus == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.rlHeader;
      RelativeLayout rlHeader = ViewBindings.findChildViewById(rootView, id);
      if (rlHeader == null) {
        break missingId;
      }

      id = R.id.spinnerCall2Status;
      Spinner spinnerCall2Status = ViewBindings.findChildViewById(rootView, id);
      if (spinnerCall2Status == null) {
        break missingId;
      }

      id = R.id.spinnerCall3Status;
      Spinner spinnerCall3Status = ViewBindings.findChildViewById(rootView, id);
      if (spinnerCall3Status == null) {
        break missingId;
      }

      id = R.id.spinnerCall4Status;
      Spinner spinnerCall4Status = ViewBindings.findChildViewById(rootView, id);
      if (spinnerCall4Status == null) {
        break missingId;
      }

      id = R.id.spinnerCallStatus;
      Spinner spinnerCallStatus = ViewBindings.findChildViewById(rootView, id);
      if (spinnerCallStatus == null) {
        break missingId;
      }

      id = R.id.spinnerLeadStatus;
      Spinner spinnerLeadStatus = ViewBindings.findChildViewById(rootView, id);
      if (spinnerLeadStatus == null) {
        break missingId;
      }

      id = R.id.swipeRefresh;
      SwipeRefreshLayout swipeRefresh = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefresh == null) {
        break missingId;
      }

      id = R.id.tvAge;
      EditText tvAge = ViewBindings.findChildViewById(rootView, id);
      if (tvAge == null) {
        break missingId;
      }

      id = R.id.tvBookAppoint;
      TextView tvBookAppoint = ViewBindings.findChildViewById(rootView, id);
      if (tvBookAppoint == null) {
        break missingId;
      }

      id = R.id.tvCOmpany;
      EditText tvCOmpany = ViewBindings.findChildViewById(rootView, id);
      if (tvCOmpany == null) {
        break missingId;
      }

      id = R.id.tvCall;
      TextView tvCall = ViewBindings.findChildViewById(rootView, id);
      if (tvCall == null) {
        break missingId;
      }

      id = R.id.tvDesignation;
      EditText tvDesignation = ViewBindings.findChildViewById(rootView, id);
      if (tvDesignation == null) {
        break missingId;
      }

      id = R.id.tvEdit;
      TextView tvEdit = ViewBindings.findChildViewById(rootView, id);
      if (tvEdit == null) {
        break missingId;
      }

      id = R.id.tvEmail;
      EditText tvEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvEmail == null) {
        break missingId;
      }

      id = R.id.tvLastAction;
      TextView tvLastAction = ViewBindings.findChildViewById(rootView, id);
      if (tvLastAction == null) {
        break missingId;
      }

      id = R.id.tvMessage;
      TextView tvMessage = ViewBindings.findChildViewById(rootView, id);
      if (tvMessage == null) {
        break missingId;
      }

      id = R.id.tvNextAction;
      TextView tvNextAction = ViewBindings.findChildViewById(rootView, id);
      if (tvNextAction == null) {
        break missingId;
      }

      id = R.id.tvPhoneNumber;
      EditText tvPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (tvPhoneNumber == null) {
        break missingId;
      }

      id = R.id.tvfirstName;
      EditText tvfirstName = ViewBindings.findChildViewById(rootView, id);
      if (tvfirstName == null) {
        break missingId;
      }

      id = R.id.tvlastName;
      EditText tvlastName = ViewBindings.findChildViewById(rootView, id);
      if (tvlastName == null) {
        break missingId;
      }

      return new ActivityLeadsDetailBinding((RelativeLayout) rootView, btnEmail, ivBack, ivLogo,
          llCall2Status, llCall3Status, llCall4Status, llCallStatus, progress, rlHeader,
          spinnerCall2Status, spinnerCall3Status, spinnerCall4Status, spinnerCallStatus,
          spinnerLeadStatus, swipeRefresh, tvAge, tvBookAppoint, tvCOmpany, tvCall, tvDesignation,
          tvEdit, tvEmail, tvLastAction, tvMessage, tvNextAction, tvPhoneNumber, tvfirstName,
          tvlastName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
