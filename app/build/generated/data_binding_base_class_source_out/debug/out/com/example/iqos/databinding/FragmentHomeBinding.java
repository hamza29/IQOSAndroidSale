// Generated by view binder compiler. Do not edit!
package com.example.iqos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.iqos.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout rlAppoints;

  @NonNull
  public final RelativeLayout rlHyperCare;

  @NonNull
  public final RelativeLayout rlHyperCareAppointment;

  @NonNull
  public final RelativeLayout rlInvent;

  @NonNull
  public final RelativeLayout rlLeads;

  @NonNull
  public final RelativeLayout rlPerf;

  private FragmentHomeBinding(@NonNull RelativeLayout rootView, @NonNull RelativeLayout rlAppoints,
      @NonNull RelativeLayout rlHyperCare, @NonNull RelativeLayout rlHyperCareAppointment,
      @NonNull RelativeLayout rlInvent, @NonNull RelativeLayout rlLeads,
      @NonNull RelativeLayout rlPerf) {
    this.rootView = rootView;
    this.rlAppoints = rlAppoints;
    this.rlHyperCare = rlHyperCare;
    this.rlHyperCareAppointment = rlHyperCareAppointment;
    this.rlInvent = rlInvent;
    this.rlLeads = rlLeads;
    this.rlPerf = rlPerf;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.rlAppoints;
      RelativeLayout rlAppoints = ViewBindings.findChildViewById(rootView, id);
      if (rlAppoints == null) {
        break missingId;
      }

      id = R.id.rlHyperCare;
      RelativeLayout rlHyperCare = ViewBindings.findChildViewById(rootView, id);
      if (rlHyperCare == null) {
        break missingId;
      }

      id = R.id.rlHyperCareAppointment;
      RelativeLayout rlHyperCareAppointment = ViewBindings.findChildViewById(rootView, id);
      if (rlHyperCareAppointment == null) {
        break missingId;
      }

      id = R.id.rlInvent;
      RelativeLayout rlInvent = ViewBindings.findChildViewById(rootView, id);
      if (rlInvent == null) {
        break missingId;
      }

      id = R.id.rlLeads;
      RelativeLayout rlLeads = ViewBindings.findChildViewById(rootView, id);
      if (rlLeads == null) {
        break missingId;
      }

      id = R.id.rlPerf;
      RelativeLayout rlPerf = ViewBindings.findChildViewById(rootView, id);
      if (rlPerf == null) {
        break missingId;
      }

      return new FragmentHomeBinding((RelativeLayout) rootView, rlAppoints, rlHyperCare,
          rlHyperCareAppointment, rlInvent, rlLeads, rlPerf);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
