// Generated by view binder compiler. Do not edit!
package com.example.iqos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.iqos.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBookAppointmentBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final ImageView ivLogo;

  @NonNull
  public final LinearLayout llMain;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final RelativeLayout rlHeader;

  @NonNull
  public final RelativeLayout rlHeader2;

  @NonNull
  public final RecyclerView rvAppointments;

  @NonNull
  public final RecyclerView rvEcomAppointments;

  @NonNull
  public final SwipeRefreshLayout swipe;

  @NonNull
  public final TextView tvEcomAppointments;

  @NonNull
  public final TextView tvNormalAppointments;

  private ActivityBookAppointmentBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView ivBack, @NonNull ImageView ivLogo, @NonNull LinearLayout llMain,
      @NonNull ProgressBar progress, @NonNull RelativeLayout rlHeader,
      @NonNull RelativeLayout rlHeader2, @NonNull RecyclerView rvAppointments,
      @NonNull RecyclerView rvEcomAppointments, @NonNull SwipeRefreshLayout swipe,
      @NonNull TextView tvEcomAppointments, @NonNull TextView tvNormalAppointments) {
    this.rootView = rootView;
    this.ivBack = ivBack;
    this.ivLogo = ivLogo;
    this.llMain = llMain;
    this.progress = progress;
    this.rlHeader = rlHeader;
    this.rlHeader2 = rlHeader2;
    this.rvAppointments = rvAppointments;
    this.rvEcomAppointments = rvEcomAppointments;
    this.swipe = swipe;
    this.tvEcomAppointments = tvEcomAppointments;
    this.tvNormalAppointments = tvNormalAppointments;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBookAppointmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBookAppointmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_book_appointment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBookAppointmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivBack;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.ivLogo;
      ImageView ivLogo = ViewBindings.findChildViewById(rootView, id);
      if (ivLogo == null) {
        break missingId;
      }

      id = R.id.llMain;
      LinearLayout llMain = ViewBindings.findChildViewById(rootView, id);
      if (llMain == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.rlHeader;
      RelativeLayout rlHeader = ViewBindings.findChildViewById(rootView, id);
      if (rlHeader == null) {
        break missingId;
      }

      id = R.id.rlHeader2;
      RelativeLayout rlHeader2 = ViewBindings.findChildViewById(rootView, id);
      if (rlHeader2 == null) {
        break missingId;
      }

      id = R.id.rvAppointments;
      RecyclerView rvAppointments = ViewBindings.findChildViewById(rootView, id);
      if (rvAppointments == null) {
        break missingId;
      }

      id = R.id.rvEcomAppointments;
      RecyclerView rvEcomAppointments = ViewBindings.findChildViewById(rootView, id);
      if (rvEcomAppointments == null) {
        break missingId;
      }

      id = R.id.swipe;
      SwipeRefreshLayout swipe = ViewBindings.findChildViewById(rootView, id);
      if (swipe == null) {
        break missingId;
      }

      id = R.id.tvEcomAppointments;
      TextView tvEcomAppointments = ViewBindings.findChildViewById(rootView, id);
      if (tvEcomAppointments == null) {
        break missingId;
      }

      id = R.id.tvNormalAppointments;
      TextView tvNormalAppointments = ViewBindings.findChildViewById(rootView, id);
      if (tvNormalAppointments == null) {
        break missingId;
      }

      return new ActivityBookAppointmentBinding((RelativeLayout) rootView, ivBack, ivLogo, llMain,
          progress, rlHeader, rlHeader2, rvAppointments, rvEcomAppointments, swipe,
          tvEcomAppointments, tvNormalAppointments);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
