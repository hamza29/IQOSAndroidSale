// Generated by view binder compiler. Do not edit!
package com.example.iqos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.iqos.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPerformanceBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final ImageView ivLogo;

  @NonNull
  public final LinearLayout llTasks;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final RelativeLayout rlHeader;

  @NonNull
  public final NestedScrollView rvMeeting;

  @NonNull
  public final TextView tvAssignedLeads;

  @NonNull
  public final TextView tvBookedLeads;

  @NonNull
  public final TextView tvCompletedLeads;

  @NonNull
  public final TextView tvConsumablesSold;

  @NonNull
  public final TextView tvDeviceSold;

  @NonNull
  public final TextView tvDuration;

  @NonNull
  public final TextView tvMeetingSuccessRate;

  private ActivityPerformanceBinding(@NonNull RelativeLayout rootView, @NonNull ImageView ivBack,
      @NonNull ImageView ivLogo, @NonNull LinearLayout llTasks, @NonNull ProgressBar progress,
      @NonNull RelativeLayout rlHeader, @NonNull NestedScrollView rvMeeting,
      @NonNull TextView tvAssignedLeads, @NonNull TextView tvBookedLeads,
      @NonNull TextView tvCompletedLeads, @NonNull TextView tvConsumablesSold,
      @NonNull TextView tvDeviceSold, @NonNull TextView tvDuration,
      @NonNull TextView tvMeetingSuccessRate) {
    this.rootView = rootView;
    this.ivBack = ivBack;
    this.ivLogo = ivLogo;
    this.llTasks = llTasks;
    this.progress = progress;
    this.rlHeader = rlHeader;
    this.rvMeeting = rvMeeting;
    this.tvAssignedLeads = tvAssignedLeads;
    this.tvBookedLeads = tvBookedLeads;
    this.tvCompletedLeads = tvCompletedLeads;
    this.tvConsumablesSold = tvConsumablesSold;
    this.tvDeviceSold = tvDeviceSold;
    this.tvDuration = tvDuration;
    this.tvMeetingSuccessRate = tvMeetingSuccessRate;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPerformanceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPerformanceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_performance, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPerformanceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivBack;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.ivLogo;
      ImageView ivLogo = ViewBindings.findChildViewById(rootView, id);
      if (ivLogo == null) {
        break missingId;
      }

      id = R.id.llTasks;
      LinearLayout llTasks = ViewBindings.findChildViewById(rootView, id);
      if (llTasks == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.rlHeader;
      RelativeLayout rlHeader = ViewBindings.findChildViewById(rootView, id);
      if (rlHeader == null) {
        break missingId;
      }

      id = R.id.rvMeeting;
      NestedScrollView rvMeeting = ViewBindings.findChildViewById(rootView, id);
      if (rvMeeting == null) {
        break missingId;
      }

      id = R.id.tvAssigned_Leads;
      TextView tvAssignedLeads = ViewBindings.findChildViewById(rootView, id);
      if (tvAssignedLeads == null) {
        break missingId;
      }

      id = R.id.tvBooked_Leads;
      TextView tvBookedLeads = ViewBindings.findChildViewById(rootView, id);
      if (tvBookedLeads == null) {
        break missingId;
      }

      id = R.id.tvCompletedLeads;
      TextView tvCompletedLeads = ViewBindings.findChildViewById(rootView, id);
      if (tvCompletedLeads == null) {
        break missingId;
      }

      id = R.id.tvConsumablesSold;
      TextView tvConsumablesSold = ViewBindings.findChildViewById(rootView, id);
      if (tvConsumablesSold == null) {
        break missingId;
      }

      id = R.id.tvDeviceSold;
      TextView tvDeviceSold = ViewBindings.findChildViewById(rootView, id);
      if (tvDeviceSold == null) {
        break missingId;
      }

      id = R.id.tvDuration;
      TextView tvDuration = ViewBindings.findChildViewById(rootView, id);
      if (tvDuration == null) {
        break missingId;
      }

      id = R.id.tvMeetingSuccessRate;
      TextView tvMeetingSuccessRate = ViewBindings.findChildViewById(rootView, id);
      if (tvMeetingSuccessRate == null) {
        break missingId;
      }

      return new ActivityPerformanceBinding((RelativeLayout) rootView, ivBack, ivLogo, llTasks,
          progress, rlHeader, rvMeeting, tvAssignedLeads, tvBookedLeads, tvCompletedLeads,
          tvConsumablesSold, tvDeviceSold, tvDuration, tvMeetingSuccessRate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
