// Generated by view binder compiler. Do not edit!
package com.example.iqos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.iqos.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DrawerHeaderBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final View line;

  @NonNull
  public final LinearLayout llAppointment;

  @NonNull
  public final LinearLayout llDrawerHeadings;

  @NonNull
  public final LinearLayout llHome;

  @NonNull
  public final LinearLayout llInventory;

  @NonNull
  public final LinearLayout llLeads;

  @NonNull
  public final LinearLayout llMyPerformance;

  @NonNull
  public final LinearLayout llProfile;

  @NonNull
  public final TextView tvCity;

  @NonNull
  public final TextView tvName;

  private DrawerHeaderBinding(@NonNull RelativeLayout rootView, @NonNull View line,
      @NonNull LinearLayout llAppointment, @NonNull LinearLayout llDrawerHeadings,
      @NonNull LinearLayout llHome, @NonNull LinearLayout llInventory,
      @NonNull LinearLayout llLeads, @NonNull LinearLayout llMyPerformance,
      @NonNull LinearLayout llProfile, @NonNull TextView tvCity, @NonNull TextView tvName) {
    this.rootView = rootView;
    this.line = line;
    this.llAppointment = llAppointment;
    this.llDrawerHeadings = llDrawerHeadings;
    this.llHome = llHome;
    this.llInventory = llInventory;
    this.llLeads = llLeads;
    this.llMyPerformance = llMyPerformance;
    this.llProfile = llProfile;
    this.tvCity = tvCity;
    this.tvName = tvName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DrawerHeaderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DrawerHeaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.drawer_header, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DrawerHeaderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.line;
      View line = ViewBindings.findChildViewById(rootView, id);
      if (line == null) {
        break missingId;
      }

      id = R.id.llAppointment;
      LinearLayout llAppointment = ViewBindings.findChildViewById(rootView, id);
      if (llAppointment == null) {
        break missingId;
      }

      id = R.id.llDrawerHeadings;
      LinearLayout llDrawerHeadings = ViewBindings.findChildViewById(rootView, id);
      if (llDrawerHeadings == null) {
        break missingId;
      }

      id = R.id.llHome;
      LinearLayout llHome = ViewBindings.findChildViewById(rootView, id);
      if (llHome == null) {
        break missingId;
      }

      id = R.id.llInventory;
      LinearLayout llInventory = ViewBindings.findChildViewById(rootView, id);
      if (llInventory == null) {
        break missingId;
      }

      id = R.id.llLeads;
      LinearLayout llLeads = ViewBindings.findChildViewById(rootView, id);
      if (llLeads == null) {
        break missingId;
      }

      id = R.id.llMyPerformance;
      LinearLayout llMyPerformance = ViewBindings.findChildViewById(rootView, id);
      if (llMyPerformance == null) {
        break missingId;
      }

      id = R.id.llProfile;
      LinearLayout llProfile = ViewBindings.findChildViewById(rootView, id);
      if (llProfile == null) {
        break missingId;
      }

      id = R.id.tvCity;
      TextView tvCity = ViewBindings.findChildViewById(rootView, id);
      if (tvCity == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      return new DrawerHeaderBinding((RelativeLayout) rootView, line, llAppointment,
          llDrawerHeadings, llHome, llInventory, llLeads, llMyPerformance, llProfile, tvCity,
          tvName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
